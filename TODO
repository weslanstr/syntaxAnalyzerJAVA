/Users/johnmetz/Desktop/cosc455/455JAVA/project2/Examples/ab2.txt



RETURN TRUE:---------------------------------------------------------------------------------------------------------
ab.txt
(DONE)

if2.txt
(DONE)

euclid.txt
(DONE)

ab2.txt
(DONE)

print.txt
(DONE)

if.txt
(DONE)

hiding.txt
(DONE)

comment.txt - should end analysis immediately with success. No tokens should be returned.
(DONE)

ok.txt - contains all of the provided lexically-valid files combined. Should output 406 tokens of the various types.
(DONE)



RETURN FALSE:---------------------------------------------------------------------------------------------------------
ab1.txt : There is a missing end at the end of the input.
(DONE)

ok.txt - contains all of the provided lexically-valid files combined. Should output 406 tokens of the various types.
(DONE)

ab3 : In line 5 there is a space between : and =.
(DONE)

bad-syntax-2.txt : error in intt b.
(DONE)

euclid-error.txt : There is an error in !== inside the while loop.
(DONE)

hiding-error.txt : missing ) in the condition of the while loop.
(DONE)

nonsense : *** is an error.
(DONE)

empty.txt - same as comment.txt in regard to how the analyzer should react as the input file immediately starts with the end of the file.
(DONE)

under.txt - should report a lexical error, as no type of token can start with a character of an underscore.
(DONE)

exclame.txt - should report a lexical error for the first character.
(DONE)


NEED WORK: ---------------------------------------------------------------------------------------------------------
//TODO 1 if lexeme is not a keyword.. then it must be an id.. identify id's.. then apply rules to them
if lexeme is not 'keyword' then it must be an id.. and SHOULD follow some syntax rules to be an id
Identifiers can contain numbers and underscores, but can only start with a letter.


bad-syntax-1.txt : ; is missing after bool c.
ab2-error.txt : There should not be a ; before end.
//TODO 2 create an check for any statement where the rules say it must end with ';'


//TODO 4 a file must be able to contain at LEAST 'program', and 'end'
all files must start with 'program' but comments / white space may be present before it

//TODO 5 THE AST TREE